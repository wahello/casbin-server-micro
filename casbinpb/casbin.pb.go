// Code generated by protoc-gen-go. DO NOT EDIT.
// source: casbin.proto

package casbinpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnforceRequest struct {
	Params               []string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnforceRequest) Reset()         { *m = EnforceRequest{} }
func (m *EnforceRequest) String() string { return proto.CompactTextString(m) }
func (*EnforceRequest) ProtoMessage()    {}
func (*EnforceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{0}
}

func (m *EnforceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnforceRequest.Unmarshal(m, b)
}
func (m *EnforceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnforceRequest.Marshal(b, m, deterministic)
}
func (m *EnforceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnforceRequest.Merge(m, src)
}
func (m *EnforceRequest) XXX_Size() int {
	return xxx_messageInfo_EnforceRequest.Size(m)
}
func (m *EnforceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnforceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnforceRequest proto.InternalMessageInfo

func (m *EnforceRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type BoolReply struct {
	Res                  bool     `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolReply) Reset()         { *m = BoolReply{} }
func (m *BoolReply) String() string { return proto.CompactTextString(m) }
func (*BoolReply) ProtoMessage()    {}
func (*BoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{1}
}

func (m *BoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolReply.Unmarshal(m, b)
}
func (m *BoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolReply.Marshal(b, m, deterministic)
}
func (m *BoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolReply.Merge(m, src)
}
func (m *BoolReply) XXX_Size() int {
	return xxx_messageInfo_BoolReply.Size(m)
}
func (m *BoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_BoolReply proto.InternalMessageInfo

func (m *BoolReply) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

type PolicyRequest struct {
	PType                string   `protobuf:"bytes,1,opt,name=pType,proto3" json:"pType,omitempty"`
	Params               []string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyRequest) Reset()         { *m = PolicyRequest{} }
func (m *PolicyRequest) String() string { return proto.CompactTextString(m) }
func (*PolicyRequest) ProtoMessage()    {}
func (*PolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{2}
}

func (m *PolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyRequest.Unmarshal(m, b)
}
func (m *PolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyRequest.Marshal(b, m, deterministic)
}
func (m *PolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyRequest.Merge(m, src)
}
func (m *PolicyRequest) XXX_Size() int {
	return xxx_messageInfo_PolicyRequest.Size(m)
}
func (m *PolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyRequest proto.InternalMessageInfo

func (m *PolicyRequest) GetPType() string {
	if m != nil {
		return m.PType
	}
	return ""
}

func (m *PolicyRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type SimpleGetRequest struct {
	PType                string   `protobuf:"bytes,1,opt,name=pType,proto3" json:"pType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleGetRequest) Reset()         { *m = SimpleGetRequest{} }
func (m *SimpleGetRequest) String() string { return proto.CompactTextString(m) }
func (*SimpleGetRequest) ProtoMessage()    {}
func (*SimpleGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{3}
}

func (m *SimpleGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleGetRequest.Unmarshal(m, b)
}
func (m *SimpleGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleGetRequest.Marshal(b, m, deterministic)
}
func (m *SimpleGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleGetRequest.Merge(m, src)
}
func (m *SimpleGetRequest) XXX_Size() int {
	return xxx_messageInfo_SimpleGetRequest.Size(m)
}
func (m *SimpleGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleGetRequest proto.InternalMessageInfo

func (m *SimpleGetRequest) GetPType() string {
	if m != nil {
		return m.PType
	}
	return ""
}

type ArrayReply struct {
	Array                []string `protobuf:"bytes,1,rep,name=array,proto3" json:"array,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArrayReply) Reset()         { *m = ArrayReply{} }
func (m *ArrayReply) String() string { return proto.CompactTextString(m) }
func (*ArrayReply) ProtoMessage()    {}
func (*ArrayReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{4}
}

func (m *ArrayReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayReply.Unmarshal(m, b)
}
func (m *ArrayReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayReply.Marshal(b, m, deterministic)
}
func (m *ArrayReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayReply.Merge(m, src)
}
func (m *ArrayReply) XXX_Size() int {
	return xxx_messageInfo_ArrayReply.Size(m)
}
func (m *ArrayReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayReply.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayReply proto.InternalMessageInfo

func (m *ArrayReply) GetArray() []string {
	if m != nil {
		return m.Array
	}
	return nil
}

type FilteredPolicyRequest struct {
	PType                string   `protobuf:"bytes,1,opt,name=pType,proto3" json:"pType,omitempty"`
	FieldIndex           int32    `protobuf:"varint,2,opt,name=fieldIndex,proto3" json:"fieldIndex,omitempty"`
	FieldValues          []string `protobuf:"bytes,3,rep,name=fieldValues,proto3" json:"fieldValues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilteredPolicyRequest) Reset()         { *m = FilteredPolicyRequest{} }
func (m *FilteredPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*FilteredPolicyRequest) ProtoMessage()    {}
func (*FilteredPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{5}
}

func (m *FilteredPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilteredPolicyRequest.Unmarshal(m, b)
}
func (m *FilteredPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilteredPolicyRequest.Marshal(b, m, deterministic)
}
func (m *FilteredPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilteredPolicyRequest.Merge(m, src)
}
func (m *FilteredPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_FilteredPolicyRequest.Size(m)
}
func (m *FilteredPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilteredPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilteredPolicyRequest proto.InternalMessageInfo

func (m *FilteredPolicyRequest) GetPType() string {
	if m != nil {
		return m.PType
	}
	return ""
}

func (m *FilteredPolicyRequest) GetFieldIndex() int32 {
	if m != nil {
		return m.FieldIndex
	}
	return 0
}

func (m *FilteredPolicyRequest) GetFieldValues() []string {
	if m != nil {
		return m.FieldValues
	}
	return nil
}

type UserRoleRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRoleRequest) Reset()         { *m = UserRoleRequest{} }
func (m *UserRoleRequest) String() string { return proto.CompactTextString(m) }
func (*UserRoleRequest) ProtoMessage()    {}
func (*UserRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{6}
}

func (m *UserRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRoleRequest.Unmarshal(m, b)
}
func (m *UserRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRoleRequest.Marshal(b, m, deterministic)
}
func (m *UserRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRoleRequest.Merge(m, src)
}
func (m *UserRoleRequest) XXX_Size() int {
	return xxx_messageInfo_UserRoleRequest.Size(m)
}
func (m *UserRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRoleRequest proto.InternalMessageInfo

func (m *UserRoleRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UserRoleRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type PermissionRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Permissions          []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionRequest) Reset()         { *m = PermissionRequest{} }
func (m *PermissionRequest) String() string { return proto.CompactTextString(m) }
func (*PermissionRequest) ProtoMessage()    {}
func (*PermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{7}
}

func (m *PermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionRequest.Unmarshal(m, b)
}
func (m *PermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionRequest.Marshal(b, m, deterministic)
}
func (m *PermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionRequest.Merge(m, src)
}
func (m *PermissionRequest) XXX_Size() int {
	return xxx_messageInfo_PermissionRequest.Size(m)
}
func (m *PermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionRequest proto.InternalMessageInfo

func (m *PermissionRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *PermissionRequest) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type Array2DReply struct {
	D2                   []*Array2DReplyD `protobuf:"bytes,1,rep,name=d2,proto3" json:"d2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Array2DReply) Reset()         { *m = Array2DReply{} }
func (m *Array2DReply) String() string { return proto.CompactTextString(m) }
func (*Array2DReply) ProtoMessage()    {}
func (*Array2DReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{8}
}

func (m *Array2DReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Array2DReply.Unmarshal(m, b)
}
func (m *Array2DReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Array2DReply.Marshal(b, m, deterministic)
}
func (m *Array2DReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Array2DReply.Merge(m, src)
}
func (m *Array2DReply) XXX_Size() int {
	return xxx_messageInfo_Array2DReply.Size(m)
}
func (m *Array2DReply) XXX_DiscardUnknown() {
	xxx_messageInfo_Array2DReply.DiscardUnknown(m)
}

var xxx_messageInfo_Array2DReply proto.InternalMessageInfo

func (m *Array2DReply) GetD2() []*Array2DReplyD {
	if m != nil {
		return m.D2
	}
	return nil
}

type Array2DReplyD struct {
	D1                   []string `protobuf:"bytes,1,rep,name=d1,proto3" json:"d1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Array2DReplyD) Reset()         { *m = Array2DReplyD{} }
func (m *Array2DReplyD) String() string { return proto.CompactTextString(m) }
func (*Array2DReplyD) ProtoMessage()    {}
func (*Array2DReplyD) Descriptor() ([]byte, []int) {
	return fileDescriptor_df0f85ba9164bca5, []int{8, 0}
}

func (m *Array2DReplyD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Array2DReplyD.Unmarshal(m, b)
}
func (m *Array2DReplyD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Array2DReplyD.Marshal(b, m, deterministic)
}
func (m *Array2DReplyD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Array2DReplyD.Merge(m, src)
}
func (m *Array2DReplyD) XXX_Size() int {
	return xxx_messageInfo_Array2DReplyD.Size(m)
}
func (m *Array2DReplyD) XXX_DiscardUnknown() {
	xxx_messageInfo_Array2DReplyD.DiscardUnknown(m)
}

var xxx_messageInfo_Array2DReplyD proto.InternalMessageInfo

func (m *Array2DReplyD) GetD1() []string {
	if m != nil {
		return m.D1
	}
	return nil
}

func init() {
	proto.RegisterType((*EnforceRequest)(nil), "casbinpb.EnforceRequest")
	proto.RegisterType((*BoolReply)(nil), "casbinpb.BoolReply")
	proto.RegisterType((*PolicyRequest)(nil), "casbinpb.PolicyRequest")
	proto.RegisterType((*SimpleGetRequest)(nil), "casbinpb.SimpleGetRequest")
	proto.RegisterType((*ArrayReply)(nil), "casbinpb.ArrayReply")
	proto.RegisterType((*FilteredPolicyRequest)(nil), "casbinpb.FilteredPolicyRequest")
	proto.RegisterType((*UserRoleRequest)(nil), "casbinpb.UserRoleRequest")
	proto.RegisterType((*PermissionRequest)(nil), "casbinpb.PermissionRequest")
	proto.RegisterType((*Array2DReply)(nil), "casbinpb.Array2DReply")
	proto.RegisterType((*Array2DReplyD)(nil), "casbinpb.Array2DReply.d")
}

func init() { proto.RegisterFile("casbin.proto", fileDescriptor_df0f85ba9164bca5) }

var fileDescriptor_df0f85ba9164bca5 = []byte{
	// 1618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x99, 0x4b, 0x6f, 0xdb, 0xc6,
	0x16, 0xc7, 0x41, 0xf9, 0x26, 0x37, 0x1e, 0x27, 0x8e, 0x3d, 0x7e, 0xc9, 0x94, 0xed, 0xd0, 0xbc,
	0xb9, 0x37, 0x0a, 0x63, 0x4b, 0x37, 0x4a, 0x37, 0x69, 0x9b, 0x00, 0x74, 0x1e, 0xb2, 0x81, 0xe6,
	0x01, 0xb9, 0x49, 0x81, 0xa2, 0x80, 0x4b, 0x8b, 0x23, 0x99, 0x2d, 0xc5, 0x61, 0x48, 0x2a, 0x89,
	0x80, 0x6c, 0xd2, 0xa2, 0x40, 0x57, 0x05, 0xca, 0xac, 0xfa, 0x00, 0xda, 0x5d, 0x81, 0x02, 0xdd,
	0x74, 0xd1, 0x65, 0xbb, 0xe8, 0xaa, 0x40, 0x77, 0xed, 0x07, 0xe8, 0xa2, 0x1f, 0xa4, 0xe0, 0x0c,
	0x87, 0x22, 0x87, 0x43, 0xc7, 0x52, 0xbc, 0x13, 0x1f, 0x73, 0xfe, 0xbf, 0xf3, 0xe7, 0x99, 0x33,
	0x1c, 0x0a, 0x9c, 0x6e, 0x1b, 0xfe, 0xbe, 0xe5, 0xd4, 0x5c, 0x0f, 0x07, 0x18, 0x9e, 0xa2, 0x47,
	0xee, 0xbe, 0xbc, 0x41, 0x4e, 0xb4, 0x37, 0xbb, 0xc8, 0xd9, 0xf4, 0x9f, 0x18, 0xdd, 0x2e, 0xf2,
	0xea, 0xd8, 0x0d, 0x2c, 0xec, 0xf8, 0x75, 0xc3, 0x71, 0x70, 0x60, 0x90, 0xdf, 0x74, 0x9c, 0xbc,
	0xd2, 0xc5, 0xb8, 0x6b, 0xa3, 0xba, 0xe1, 0x5a, 0x82, 0xab, 0x95, 0xf8, 0x2a, 0x39, 0xda, 0xef,
	0x77, 0xea, 0xa8, 0xe7, 0x06, 0x03, 0x7a, 0x51, 0xad, 0x82, 0xe9, 0x5b, 0x4e, 0x07, 0x7b, 0x6d,
	0xd4, 0x42, 0x8f, 0xfa, 0xc8, 0x0f, 0xe0, 0x22, 0x38, 0xe9, 0x1a, 0x9e, 0xd1, 0xf3, 0xcb, 0x25,
	0x65, 0xa2, 0x3a, 0xd9, 0x8a, 0x8f, 0xd4, 0x55, 0x30, 0xb9, 0x85, 0xb1, 0xdd, 0x42, 0xae, 0x3d,
	0x80, 0x33, 0x60, 0xc2, 0x43, 0x7e, 0x59, 0x52, 0xa4, 0xea, 0xa9, 0x56, 0xf4, 0x53, 0xbd, 0x06,
	0xce, 0xdc, 0xc7, 0xb6, 0xd5, 0x1e, 0xb0, 0x38, 0xf3, 0xe0, 0x84, 0xfb, 0xf6, 0xc0, 0x45, 0xe4,
	0xa6, 0xc9, 0x16, 0x3d, 0x28, 0x8c, 0x5e, 0x05, 0x33, 0xbb, 0x56, 0xcf, 0xb5, 0x51, 0x13, 0x05,
	0x87, 0x46, 0x50, 0x55, 0x00, 0x74, 0xcf, 0x33, 0x06, 0x14, 0x64, 0x1e, 0x9c, 0x30, 0xa2, 0xa3,
	0xb2, 0x44, 0xc2, 0xd1, 0x03, 0x15, 0x83, 0x85, 0xdb, 0x96, 0x1d, 0x20, 0x0f, 0x99, 0x47, 0x81,
	0x5a, 0x03, 0xa0, 0x63, 0x21, 0xdb, 0xdc, 0x71, 0x4c, 0xf4, 0xb4, 0x5c, 0x52, 0xa4, 0xea, 0x89,
	0x56, 0xea, 0x0c, 0x54, 0xc0, 0x14, 0x39, 0x7a, 0x68, 0xd8, 0x7d, 0xe4, 0x97, 0x27, 0x88, 0x54,
	0xfa, 0x94, 0x7a, 0x15, 0x9c, 0x7d, 0xe0, 0x23, 0xaf, 0x85, 0xed, 0xc4, 0x47, 0x08, 0xfe, 0xd5,
	0xf7, 0x91, 0x17, 0x2b, 0x91, 0xdf, 0xd1, 0x39, 0x0f, 0xdb, 0x88, 0x48, 0x4c, 0xb6, 0xc8, 0x6f,
	0x75, 0x07, 0xcc, 0xde, 0x47, 0x5e, 0xcf, 0xf2, 0x7d, 0x0b, 0x3b, 0x87, 0x0d, 0x56, 0xc0, 0x94,
	0x9b, 0xdc, 0xc8, 0xfc, 0x4b, 0x9f, 0x52, 0xef, 0x80, 0xd3, 0xc4, 0x9a, 0xc6, 0x4d, 0x6a, 0x4e,
	0x15, 0x94, 0xcc, 0x06, 0x71, 0x66, 0xaa, 0x51, 0xae, 0xb1, 0xe2, 0xaa, 0xa5, 0xef, 0xa9, 0x99,
	0xad, 0x92, 0xd9, 0x90, 0xe7, 0x80, 0x64, 0xc2, 0x69, 0x50, 0x32, 0x2f, 0xc7, 0x46, 0x96, 0xcc,
	0xcb, 0x8d, 0x5f, 0x36, 0xc0, 0xc9, 0x1b, 0x64, 0x10, 0xfc, 0x52, 0x02, 0xff, 0x8e, 0xeb, 0x04,
	0xa6, 0x22, 0x65, 0x4b, 0x47, 0x9e, 0x1b, 0x5e, 0x49, 0x4a, 0x45, 0x7d, 0x3f, 0xd4, 0x6f, 0xcb,
	0x6f, 0xdc, 0x38, 0x40, 0xed, 0x0f, 0x95, 0x14, 0xac, 0xd2, 0xc1, 0x9e, 0x12, 0xe5, 0xa5, 0x60,
	0x47, 0x41, 0x8e, 0xe9, 0x62, 0xcb, 0x09, 0x94, 0x27, 0x56, 0x70, 0xa0, 0xf8, 0x2e, 0x6a, 0x5b,
	0x1d, 0xab, 0xad, 0xf4, 0x50, 0x70, 0x80, 0x4d, 0x8d, 0x29, 0x7f, 0xf4, 0xc7, 0xdf, 0x2f, 0x4a,
	0xb3, 0xea, 0xd9, 0x3a, 0x55, 0xa9, 0xa3, 0x18, 0xe8, 0x19, 0x00, 0x6f, 0x61, 0x23, 0x7e, 0xd2,
	0x70, 0xb1, 0x46, 0xeb, 0xbd, 0xc6, 0xea, 0xbd, 0x76, 0x2b, 0xaa, 0x77, 0xb9, 0xe0, 0xbc, 0x7a,
	0x3d, 0xd4, 0x15, 0x19, 0x46, 0x01, 0x14, 0x9a, 0xac, 0x42, 0x03, 0x69, 0xa9, 0xa0, 0x44, 0x79,
	0x01, 0xce, 0x31, 0x65, 0x1b, 0x1b, 0xe6, 0x9e, 0x4b, 0xf5, 0x9e, 0x01, 0xb0, 0x6b, 0x3c, 0x46,
	0xaf, 0xa4, 0x1e, 0x05, 0xe0, 0xd5, 0x87, 0x41, 0xa9, 0xba, 0x9c, 0xa8, 0xfb, 0xc6, 0x63, 0xc4,
	0xd4, 0x9f, 0x82, 0x49, 0xdd, 0x64, 0xa9, 0x2f, 0x0d, 0xfd, 0xcf, 0x94, 0xbd, 0xf8, 0xc1, 0x5c,
	0x8b, 0xa4, 0xe7, 0x74, 0xd3, 0x54, 0x1c, 0xf4, 0x44, 0xa1, 0xf1, 0x14, 0xaf, 0x6f, 0x23, 0x6d,
	0x18, 0x92, 0x48, 0xcf, 0xab, 0x90, 0x49, 0x1b, 0x66, 0x92, 0xf7, 0x67, 0x12, 0x98, 0xd6, 0x4d,
	0xf3, 0xae, 0xd1, 0x43, 0xe3, 0xe9, 0xdf, 0x0d, 0xf5, 0x4b, 0xf2, 0x32, 0xd3, 0x77, 0xa2, 0x38,
	0x19, 0x0a, 0x2e, 0x3a, 0x41, 0x91, 0xd5, 0x72, 0x1a, 0x85, 0x0c, 0x62, 0x40, 0x1f, 0x4b, 0xe0,
	0x74, 0x0b, 0xf5, 0x70, 0xf2, 0x2c, 0x0a, 0x71, 0x8a, 0x1e, 0xc6, 0x56, 0xa8, 0xab, 0x32, 0xa4,
	0x31, 0x32, 0x28, 0x99, 0xb8, 0x04, 0x64, 0x49, 0x5b, 0x60, 0x20, 0x1e, 0xb9, 0xc6, 0x28, 0xbe,
	0x90, 0xc0, 0x2c, 0xbd, 0xfb, 0x48, 0xce, 0x14, 0xa1, 0xec, 0x86, 0xfa, 0xa6, 0x5c, 0x8e, 0x51,
	0xf2, 0xde, 0xe4, 0x25, 0x08, 0xd5, 0xaa, 0x56, 0xe1, 0xa8, 0x32, 0x0e, 0xfd, 0x20, 0x81, 0x79,
	0x3a, 0x30, 0xdb, 0x1d, 0xe1, 0xb9, 0x21, 0x9e, 0xb0, 0x6f, 0x16, 0x62, 0xbe, 0x17, 0xea, 0x57,
	0xe4, 0x4a, 0x8c, 0xd9, 0x89, 0x87, 0x66, 0x48, 0x85, 0x82, 0x04, 0x56, 0xd1, 0xd6, 0x38, 0x58,
	0x16, 0x80, 0xf1, 0xfe, 0x2a, 0x81, 0xe5, 0xec, 0xf0, 0xb4, 0xa7, 0x63, 0x43, 0xf7, 0x42, 0xfd,
	0xba, 0xbc, 0xce, 0x43, 0xe7, 0x4d, 0x2e, 0xd6, 0x26, 0xfc, 0xff, 0xd3, 0xce, 0x17, 0xf1, 0x67,
	0x5c, 0x7f, 0x04, 0x26, 0x9b, 0x28, 0x78, 0x69, 0x7f, 0x10, 0xb6, 0x67, 0xf5, 0xb5, 0x50, 0x5f,
	0x92, 0x41, 0x13, 0x05, 0x31, 0x99, 0x36, 0x8c, 0x45, 0xe7, 0x26, 0x4c, 0xe6, 0x66, 0x17, 0x05,
	0x4c, 0xf2, 0x53, 0x09, 0x4c, 0x37, 0x51, 0x70, 0xc4, 0x0a, 0x14, 0x2b, 0xdf, 0x8a, 0x26, 0xc3,
	0x4c, 0xa4, 0x9c, 0x76, 0x46, 0xe3, 0xe2, 0xd2, 0x59, 0x09, 0xcb, 0x69, 0x88, 0x4c, 0xf6, 0x5f,
	0x4b, 0x60, 0xb6, 0x89, 0x82, 0xd1, 0x0b, 0x4e, 0x4c, 0x75, 0x37, 0xd4, 0xab, 0xf2, 0x5c, 0x44,
	0xc5, 0x55, 0x9b, 0x96, 0x57, 0xa1, 0x53, 0x02, 0x56, 0xd2, 0x6c, 0x7c, 0x89, 0xfd, 0x28, 0x81,
	0xc5, 0xd4, 0xc0, 0x11, 0xeb, 0x4b, 0xcc, 0xb8, 0x17, 0x4d, 0x8a, 0xe5, 0x0c, 0x63, 0xc6, 0xc2,
	0x02, 0x41, 0x82, 0xfb, 0x1f, 0xb8, 0x2e, 0xc4, 0xcd, 0x78, 0xfa, 0xb9, 0x04, 0x66, 0x75, 0xd3,
	0x6c, 0x7a, 0xb8, 0xef, 0x5a, 0x4e, 0x77, 0xdc, 0xee, 0x5b, 0xa5, 0xdd, 0xbf, 0x1b, 0x87, 0x49,
	0x8c, 0xcc, 0x85, 0xa6, 0x46, 0xaa, 0x95, 0x74, 0xeb, 0x65, 0xa3, 0x18, 0xd3, 0x77, 0x12, 0x58,
	0x64, 0x0d, 0xfb, 0x95, 0xc0, 0xa8, 0x7b, 0x64, 0x59, 0x20, 0xa6, 0xf1, 0x78, 0x05, 0x2a, 0xd4,
	0x3d, 0x75, 0x3d, 0xbf, 0x3c, 0xf0, 0xa4, 0xdf, 0x26, 0x5d, 0xf0, 0xa8, 0x9c, 0x45, 0x8d, 0xe4,
	0x9d, 0x50, 0xaf, 0xc9, 0x8b, 0x71, 0x23, 0xe1, 0x39, 0x85, 0x1a, 0x05, 0x8d, 0x8f, 0x47, 0xfc,
	0x29, 0x69, 0x7c, 0x23, 0xf9, 0x59, 0xc4, 0x79, 0x10, 0xea, 0x57, 0xe5, 0x95, 0xcc, 0x62, 0xc2,
	0xd3, 0x16, 0xcb, 0x15, 0xf4, 0x3a, 0xb1, 0xb7, 0xbf, 0x49, 0x60, 0x25, 0xdb, 0x35, 0x39, 0xf6,
	0xb1, 0x9b, 0xb6, 0x1b, 0x35, 0xed, 0x73, 0x7c, 0xd3, 0xe6, 0xd3, 0xa8, 0x24, 0xe2, 0x79, 0x6d,
	0x92, 0xc8, 0x45, 0xed, 0x42, 0x51, 0xd3, 0xe6, 0x73, 0xf9, 0x4b, 0x02, 0xeb, 0x82, 0x15, 0xe0,
	0xb8, 0x12, 0x7a, 0x2e, 0x85, 0xfa, 0x8e, 0xfc, 0x5f, 0xf1, 0x32, 0xc4, 0xe7, 0xa5, 0x64, 0xf2,
	0x2a, 0x7a, 0x4a, 0x75, 0x6d, 0xf3, 0xf0, 0x15, 0x89, 0x4f, 0xf1, 0x05, 0x6d, 0xce, 0x5c, 0x4a,
	0xa3, 0xae, 0x51, 0xc3, 0x9e, 0x9c, 0x6b, 0x25, 0xb9, 0xe0, 0xa2, 0x9e, 0xcc, 0x53, 0x7d, 0x4f,
	0x7b, 0xf2, 0x88, 0xa5, 0xff, 0xb2, 0x5e, 0x5c, 0xd0, 0x4d, 0xc4, 0x42, 0xa2, 0x5e, 0x2c, 0xb6,
	0xf0, 0x67, 0x09, 0x2c, 0xa7, 0xfa, 0xf9, 0xe8, 0xd5, 0x21, 0xe6, 0xa6, 0x53, 0x36, 0xb3, 0x86,
	0xe4, 0xa6, 0x6c, 0xa1, 0x2c, 0x9d, 0xb2, 0xf0, 0xbc, 0x70, 0x25, 0xe1, 0x13, 0xf8, 0x53, 0x02,
	0x6b, 0xfc, 0x82, 0x74, 0x5c, 0x59, 0x0c, 0x42, 0xfd, 0xa6, 0xac, 0x0a, 0x56, 0x42, 0x3e, 0x97,
	0x97, 0x10, 0x90, 0x84, 0x36, 0xa0, 0x76, 0xc8, 0xd2, 0xc8, 0xa7, 0xf5, 0x09, 0x7d, 0x05, 0xd2,
	0x6d, 0x7b, 0xb7, 0xbf, 0xff, 0x01, 0x6a, 0x07, 0x7e, 0x61, 0x5d, 0xcf, 0x73, 0xf4, 0xfc, 0xfb,
	0x8f, 0x61, 0xdb, 0x8a, 0x1f, 0x07, 0xd1, 0xb8, 0xa0, 0xa2, 0xf7, 0x1f, 0xc3, 0xb6, 0xf7, 0xd8,
	0xfd, 0xf0, 0x1b, 0x09, 0xcc, 0xd1, 0x21, 0x24, 0xaf, 0x04, 0x46, 0x1e, 0x8a, 0xf2, 0x1f, 0x3e,
	0x0a, 0x80, 0x1e, 0x46, 0x5b, 0x82, 0x45, 0x06, 0x44, 0x7d, 0x4c, 0xb0, 0x44, 0x1a, 0x74, 0xb1,
	0x81, 0x6b, 0x3c, 0x1b, 0x35, 0x2c, 0x21, 0x7c, 0x2e, 0x81, 0x33, 0x74, 0xf4, 0xbd, 0xb1, 0x8c,
	0xda, 0x8a, 0xf6, 0x91, 0x67, 0x19, 0x17, 0x8e, 0x81, 0xb2, 0x21, 0x09, 0xca, 0x32, 0x5c, 0xe2,
	0x51, 0xe2, 0xbb, 0xe1, 0x57, 0x12, 0x80, 0xa9, 0x0c, 0xee, 0x8d, 0x6d, 0xd2, 0x6e, 0xb4, 0xa9,
	0x5c, 0xc8, 0x9a, 0xc4, 0x90, 0x04, 0x0a, 0x84, 0xeb, 0x1c, 0x5c, 0x15, 0x5b, 0x84, 0x73, 0x0e,
	0xe9, 0x6d, 0xf2, 0x65, 0xed, 0x95, 0x1c, 0x32, 0x68, 0x0c, 0x2d, 0x1b, 0xb2, 0xc8, 0xa1, 0xf8,
	0x6e, 0xde, 0x21, 0x06, 0x72, 0x3c, 0x0e, 0x31, 0x24, 0x81, 0xc2, 0xe1, 0x0e, 0x31, 0xba, 0x01,
	0x98, 0xa2, 0x43, 0x5b, 0xd8, 0x46, 0xa3, 0xda, 0xf3, 0x66, 0xa8, 0xaf, 0xc8, 0x67, 0x18, 0x91,
	0x17, 0x45, 0xd0, 0xd2, 0xe1, 0xe8, 0x86, 0x1b, 0x2e, 0xf0, 0x08, 0xe4, 0xce, 0x68, 0x0d, 0x9b,
	0x49, 0x61, 0x53, 0x80, 0xd1, 0x6d, 0xb9, 0x13, 0xea, 0x17, 0xe8, 0x22, 0x36, 0xb4, 0x85, 0xa2,
	0xe4, 0xa2, 0x8b, 0xd6, 0xb0, 0xa1, 0x25, 0x94, 0x0a, 0x83, 0xc9, 0x6d, 0xc3, 0x1f, 0xeb, 0x05,
	0x98, 0x6e, 0xf9, 0xb6, 0x0d, 0x3f, 0xd9, 0xf2, 0x25, 0x91, 0xf8, 0x2d, 0xdf, 0x81, 0xe1, 0xa7,
	0xfb, 0xdd, 0xb6, 0xe1, 0x8f, 0xff, 0x39, 0x86, 0xf6, 0xbb, 0x48, 0x36, 0xbb, 0xdf, 0xcb, 0x06,
	0xe5, 0xfb, 0x5d, 0x44, 0x90, 0xdb, 0x9b, 0x6c, 0x1b, 0xfe, 0x31, 0xec, 0x4d, 0x22, 0x94, 0xdc,
	0x0b, 0x45, 0x2e, 0x34, 0xff, 0x30, 0x22, 0x20, 0xd1, 0xde, 0x84, 0xa5, 0x71, 0x0c, 0x7b, 0x93,
	0xa1, 0x47, 0xb9, 0xb7, 0x09, 0xb1, 0x0a, 0xff, 0x36, 0x31, 0x34, 0x8d, 0x27, 0xfd, 0x5d, 0x02,
	0xab, 0x4d, 0x14, 0xec, 0xf4, 0x5c, 0xdb, 0x6a, 0x5b, 0xc1, 0xf0, 0xc3, 0xb0, 0x7f, 0x1b, 0x7b,
	0x0f, 0x7c, 0xe4, 0xc1, 0x4a, 0x0a, 0x98, 0xff, 0x6c, 0x5c, 0xb8, 0x0e, 0x3f, 0x0e, 0xf5, 0x2d,
	0x79, 0x3d, 0x2a, 0x6e, 0x2b, 0x8e, 0x2c, 0xfc, 0x14, 0xab, 0x1d, 0xae, 0x4d, 0xd2, 0xb8, 0x04,
	0x2f, 0xa6, 0xeb, 0x9e, 0xc5, 0xdb, 0x4b, 0xc5, 0xdb, 0xeb, 0x60, 0x6f, 0x2f, 0x8a, 0xb7, 0x75,
	0x35, 0xd4, 0x37, 0xe0, 0x44, 0x43, 0xfa, 0xbf, 0x26, 0x95, 0x1a, 0x33, 0x86, 0x1b, 0xdd, 0x4b,
	0xfe, 0x9b, 0xa8, 0x77, 0x3d, 0xb7, 0xfd, 0x7a, 0xee, 0xcc, 0xbb, 0xc9, 0x3f, 0x20, 0xfb, 0x27,
	0x49, 0xeb, 0xb8, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xe8, 0xcb, 0x95, 0x22, 0x19,
	0x00, 0x00,
}
